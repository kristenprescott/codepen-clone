{"version":3,"sources":["Editor.js","useLocalStorage.js","App.js","serviceWorker.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","showHint","completeSingle","console","log","onKeyDown","event","state","completionActive","key","autoScroll","options","mode","theme","lint","inputStyle","lineWrapping","smartIndent","lineNumbers","fixedGutter","foldGutter","foldOptions","widget","gutters","autoCloseTags","autoCloseBrackets","matchBrackets","autoRefresh","tabSize","keyMap","extraKeys","Tab","autofocus","highlightSelectionMatches","minChars","showToken","style","styleActiveLine","styleActiveSelected","viewportMargin","cursorScrollMargin","useLocalStorage","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","defaultValue","title","sandbox","frameBorder","width","height","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d643563f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./index.css\";\n\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/xml-hint.js\";\nimport \"codemirror/addon/hint/html-hint.js\";\nimport \"codemirror/addon/hint/show-hint.js\";\n\nimport \"codemirror/addon/display/autorefresh\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/edit/closetag\";\nimport \"codemirror/keymap/sublime\";\n\nimport \"codemirror/addon/selection/active-line\";\nimport \"codemirror/addon/fold/foldcode\";\nimport \"codemirror/addon/fold/foldgutter\";\nimport \"codemirror/addon/fold/brace-fold\";\nimport \"codemirror/addon/fold/comment-fold\";\nimport \"codemirror/addon/fold/indent-fold\";\nimport \"codemirror/addon/fold/xml-fold\";\nimport \"codemirror/addon/fold/foldgutter.css\";\n\nimport \"codemirror/addon/search/searchcursor\";\nimport \"codemirror/addon/search/match-highlighter\";\nimport \"codemirror/addon/search/jump-to-line.js\";\nimport \"codemirror/addon/search/match-highlighter.js\";\nimport \"codemirror/addon/search/matchesonscrollbar.css\";\nimport \"codemirror/addon/search/matchesonscrollbar.js\";\n\nimport \"codemirror/addon/dialog/dialog.js\";\nimport \"codemirror/addon/dialog/dialog.css\";\nimport \"codemirror/addon/hint/anyword-hint\";\n\nexport default function Editor(props) {\n  const { language, displayName, value, onChange } = props;\n  const [open, setOpen] = useState(true);\n  // const [completion, setCompletion] = useState(null)\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n    editor.showHint({ completeSingle: false });\n\n    console.log(editor, data, value);\n  }\n\n  const handleKeydown = (editor, event) => {\n    if (\n      !editor.state.completionActive &&\n      event.key !== \"Shift\" &&\n      event.key !== \"Enter\"\n    ) {\n      editor.showHint({ completeSingle: false });\n    }\n  };\n\n  return (\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-btn\"\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        onKeyDown={handleKeydown}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        autoScroll=\"true\"\n        options={{\n          mode: language,\n          theme: \"material\",\n          lint: true,\n          inputStyle: \"contenteditable\",\n          lineWrapping: true,\n          smartIndent: true,\n          lineNumbers: true,\n          fixedGutter: false,\n          foldGutter: true,\n          foldOptions: { widget: \"\\u2026\" },\n          gutters: [\n            \"CodeMirror-foldgutter\",\n            \"CodeMirror-lint-markers\",\n            \"CodeMirror-linenumbers\",\n          ],\n          autoCloseTags: true,\n          autoCloseBrackets: true,\n          matchBrackets: true,\n          autoRefresh: true,\n          tabSize: 2,\n          keyMap: \"sublime\",\n          extraKeys: {\n            Tab: \"autocomplete\",\n            //  \"Ctrl-Q\": function(cm){console.log(\"HEREEE\");\n          },\n          autofocus: true,\n          highlightSelectionMatches: {\n            minChars: 2,\n            showToken: /Hello/,\n            style: \"matchhighlight\",\n          },\n          styleActiveLine: true,\n          styleActiveSelected: true,\n          viewportMargin: 99,\n          cursorScrollMargin: 48,\n        }}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"codepen-clone-\";\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n\n  return [value, setValue];\n}\n","// https://dev.to/majov84382672/pwa-codepen-clone-1amf\nimport React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\n// import Terminal from \"./Terminal\";\nimport useLocalStorage from \"./useLocalStorage\";\n\n// import SplitterLayout from \"react-splitter-layout\";\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  // const [history, setHistory] = useState([]);\n\n  // const addItem = (item) => {\n  //   history.push(item);\n  //   setHistory(history);\n  // };\n\n  // const clearHistory = () => setHistory([]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    }, 250);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  const code = `const a = 0;`;\n\n  return (\n    <>\n      {/* <SplitterLayout\n        split=\"horizontal\"\n        minSize={820}\n        maxSize={-176}\n        defaultSize=\"69%\"\n        primary=\"first\"\n        borderColor=\"#999\"\n        percentage={false}\n        primaryIndex={1}\n        secondaryInitialSize={100}\n      > */}\n      <div className=\"pane top-pane\">\n        {/* <div className=\"small-pane\"> */}\n        <Editor\n          defaultValue={code}\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n          // addItem={addItem}\n        />\n        {/* </div> */}\n        {/* <div className=\"small-pane\"> */}\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n          // addItem={addItem}\n        />\n        {/* </div> */}\n        {/* <div className=\"small-pane\"> */}\n        <Editor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js}\n          onChange={setJs}\n          // addItem={addItem}\n        />\n        {/* </div> */}\n      </div>\n      {/* </SplitterLayout> */}\n\n      {/* <SplitterLayout\n        borderColor=\"#999\"\n        percentage={false}\n        primaryIndex={1}\n        secondaryInitialSize={100}\n      > */}\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n\n        {/* <Terminal history={history} clearHistory={clearHistory} /> */}\n      </div>\n      {/* </SplitterLayout> */}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}